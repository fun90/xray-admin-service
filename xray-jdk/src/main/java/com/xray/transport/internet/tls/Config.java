// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport/internet/tls/config.proto

package com.xray.transport.internet.tls;

/**
 * Protobuf type {@code xray.transport.internet.tls.Config}
 */
public  final class Config extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:xray.transport.internet.tls.Config)
    ConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Config.newBuilder() to construct.
  private Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Config() {
    certificate_ = java.util.Collections.emptyList();
    serverName_ = "";
    nextProtocol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    minVersion_ = "";
    maxVersion_ = "";
    cipherSuites_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Config(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            allowInsecure_ = input.readBool();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              certificate_ = new java.util.ArrayList<com.xray.transport.internet.tls.Certificate>();
              mutable_bitField0_ |= 0x00000002;
            }
            certificate_.add(
                input.readMessage(com.xray.transport.internet.tls.Certificate.parser(), extensionRegistry));
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            serverName_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              nextProtocol_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000008;
            }
            nextProtocol_.add(s);
            break;
          }
          case 40: {

            enableSessionResumption_ = input.readBool();
            break;
          }
          case 48: {

            disableSystemRoot_ = input.readBool();
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            minVersion_ = s;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            maxVersion_ = s;
            break;
          }
          case 74: {
            java.lang.String s = input.readStringRequireUtf8();

            cipherSuites_ = s;
            break;
          }
          case 80: {

            preferServerCipherSuites_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        certificate_ = java.util.Collections.unmodifiableList(certificate_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        nextProtocol_ = nextProtocol_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.xray.transport.internet.tls.ConfigOuterClass.internal_static_xray_transport_internet_tls_Config_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.xray.transport.internet.tls.ConfigOuterClass.internal_static_xray_transport_internet_tls_Config_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.xray.transport.internet.tls.Config.class, com.xray.transport.internet.tls.Config.Builder.class);
  }

  private int bitField0_;
  public static final int ALLOW_INSECURE_FIELD_NUMBER = 1;
  private boolean allowInsecure_;
  /**
   * <pre>
   * Whether or not to allow self-signed certificates.
   * </pre>
   *
   * <code>bool allow_insecure = 1;</code>
   */
  public boolean getAllowInsecure() {
    return allowInsecure_;
  }

  public static final int CERTIFICATE_FIELD_NUMBER = 2;
  private java.util.List<com.xray.transport.internet.tls.Certificate> certificate_;
  /**
   * <pre>
   * List of certificates to be served on server.
   * </pre>
   *
   * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
   */
  public java.util.List<com.xray.transport.internet.tls.Certificate> getCertificateList() {
    return certificate_;
  }
  /**
   * <pre>
   * List of certificates to be served on server.
   * </pre>
   *
   * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
   */
  public java.util.List<? extends com.xray.transport.internet.tls.CertificateOrBuilder> 
      getCertificateOrBuilderList() {
    return certificate_;
  }
  /**
   * <pre>
   * List of certificates to be served on server.
   * </pre>
   *
   * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
   */
  public int getCertificateCount() {
    return certificate_.size();
  }
  /**
   * <pre>
   * List of certificates to be served on server.
   * </pre>
   *
   * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
   */
  public com.xray.transport.internet.tls.Certificate getCertificate(int index) {
    return certificate_.get(index);
  }
  /**
   * <pre>
   * List of certificates to be served on server.
   * </pre>
   *
   * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
   */
  public com.xray.transport.internet.tls.CertificateOrBuilder getCertificateOrBuilder(
      int index) {
    return certificate_.get(index);
  }

  public static final int SERVER_NAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object serverName_;
  /**
   * <pre>
   * Override server name.
   * </pre>
   *
   * <code>string server_name = 3;</code>
   */
  public java.lang.String getServerName() {
    java.lang.Object ref = serverName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serverName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Override server name.
   * </pre>
   *
   * <code>string server_name = 3;</code>
   */
  public com.google.protobuf.ByteString
      getServerNameBytes() {
    java.lang.Object ref = serverName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      serverName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEXT_PROTOCOL_FIELD_NUMBER = 4;
  private com.google.protobuf.LazyStringList nextProtocol_;
  /**
   * <pre>
   * Lists of string as ALPN values.
   * </pre>
   *
   * <code>repeated string next_protocol = 4;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getNextProtocolList() {
    return nextProtocol_;
  }
  /**
   * <pre>
   * Lists of string as ALPN values.
   * </pre>
   *
   * <code>repeated string next_protocol = 4;</code>
   */
  public int getNextProtocolCount() {
    return nextProtocol_.size();
  }
  /**
   * <pre>
   * Lists of string as ALPN values.
   * </pre>
   *
   * <code>repeated string next_protocol = 4;</code>
   */
  public java.lang.String getNextProtocol(int index) {
    return nextProtocol_.get(index);
  }
  /**
   * <pre>
   * Lists of string as ALPN values.
   * </pre>
   *
   * <code>repeated string next_protocol = 4;</code>
   */
  public com.google.protobuf.ByteString
      getNextProtocolBytes(int index) {
    return nextProtocol_.getByteString(index);
  }

  public static final int ENABLE_SESSION_RESUMPTION_FIELD_NUMBER = 5;
  private boolean enableSessionResumption_;
  /**
   * <pre>
   * Whether or not to enable session (ticket) resumption.
   * </pre>
   *
   * <code>bool enable_session_resumption = 5;</code>
   */
  public boolean getEnableSessionResumption() {
    return enableSessionResumption_;
  }

  public static final int DISABLE_SYSTEM_ROOT_FIELD_NUMBER = 6;
  private boolean disableSystemRoot_;
  /**
   * <pre>
   * If true, root certificates on the system will not be loaded for
   * verification.
   * </pre>
   *
   * <code>bool disable_system_root = 6;</code>
   */
  public boolean getDisableSystemRoot() {
    return disableSystemRoot_;
  }

  public static final int MIN_VERSION_FIELD_NUMBER = 7;
  private volatile java.lang.Object minVersion_;
  /**
   * <pre>
   * The minimum TLS version.
   * </pre>
   *
   * <code>string min_version = 7;</code>
   */
  public java.lang.String getMinVersion() {
    java.lang.Object ref = minVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      minVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The minimum TLS version.
   * </pre>
   *
   * <code>string min_version = 7;</code>
   */
  public com.google.protobuf.ByteString
      getMinVersionBytes() {
    java.lang.Object ref = minVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      minVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAX_VERSION_FIELD_NUMBER = 8;
  private volatile java.lang.Object maxVersion_;
  /**
   * <pre>
   * The maximum TLS version.
   * </pre>
   *
   * <code>string max_version = 8;</code>
   */
  public java.lang.String getMaxVersion() {
    java.lang.Object ref = maxVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      maxVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The maximum TLS version.
   * </pre>
   *
   * <code>string max_version = 8;</code>
   */
  public com.google.protobuf.ByteString
      getMaxVersionBytes() {
    java.lang.Object ref = maxVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      maxVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CIPHER_SUITES_FIELD_NUMBER = 9;
  private volatile java.lang.Object cipherSuites_;
  /**
   * <pre>
   * Specify cipher suites, except for TLS 1.3.
   * </pre>
   *
   * <code>string cipher_suites = 9;</code>
   */
  public java.lang.String getCipherSuites() {
    java.lang.Object ref = cipherSuites_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cipherSuites_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Specify cipher suites, except for TLS 1.3.
   * </pre>
   *
   * <code>string cipher_suites = 9;</code>
   */
  public com.google.protobuf.ByteString
      getCipherSuitesBytes() {
    java.lang.Object ref = cipherSuites_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cipherSuites_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PREFER_SERVER_CIPHER_SUITES_FIELD_NUMBER = 10;
  private boolean preferServerCipherSuites_;
  /**
   * <pre>
   * Whether the server selects its most preferred ciphersuite.
   * </pre>
   *
   * <code>bool prefer_server_cipher_suites = 10;</code>
   */
  public boolean getPreferServerCipherSuites() {
    return preferServerCipherSuites_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (allowInsecure_ != false) {
      output.writeBool(1, allowInsecure_);
    }
    for (int i = 0; i < certificate_.size(); i++) {
      output.writeMessage(2, certificate_.get(i));
    }
    if (!getServerNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, serverName_);
    }
    for (int i = 0; i < nextProtocol_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, nextProtocol_.getRaw(i));
    }
    if (enableSessionResumption_ != false) {
      output.writeBool(5, enableSessionResumption_);
    }
    if (disableSystemRoot_ != false) {
      output.writeBool(6, disableSystemRoot_);
    }
    if (!getMinVersionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, minVersion_);
    }
    if (!getMaxVersionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, maxVersion_);
    }
    if (!getCipherSuitesBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, cipherSuites_);
    }
    if (preferServerCipherSuites_ != false) {
      output.writeBool(10, preferServerCipherSuites_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (allowInsecure_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, allowInsecure_);
    }
    for (int i = 0; i < certificate_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, certificate_.get(i));
    }
    if (!getServerNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, serverName_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < nextProtocol_.size(); i++) {
        dataSize += computeStringSizeNoTag(nextProtocol_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getNextProtocolList().size();
    }
    if (enableSessionResumption_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, enableSessionResumption_);
    }
    if (disableSystemRoot_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, disableSystemRoot_);
    }
    if (!getMinVersionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, minVersion_);
    }
    if (!getMaxVersionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, maxVersion_);
    }
    if (!getCipherSuitesBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, cipherSuites_);
    }
    if (preferServerCipherSuites_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, preferServerCipherSuites_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.xray.transport.internet.tls.Config)) {
      return super.equals(obj);
    }
    com.xray.transport.internet.tls.Config other = (com.xray.transport.internet.tls.Config) obj;

    if (getAllowInsecure()
        != other.getAllowInsecure()) return false;
    if (!getCertificateList()
        .equals(other.getCertificateList())) return false;
    if (!getServerName()
        .equals(other.getServerName())) return false;
    if (!getNextProtocolList()
        .equals(other.getNextProtocolList())) return false;
    if (getEnableSessionResumption()
        != other.getEnableSessionResumption()) return false;
    if (getDisableSystemRoot()
        != other.getDisableSystemRoot()) return false;
    if (!getMinVersion()
        .equals(other.getMinVersion())) return false;
    if (!getMaxVersion()
        .equals(other.getMaxVersion())) return false;
    if (!getCipherSuites()
        .equals(other.getCipherSuites())) return false;
    if (getPreferServerCipherSuites()
        != other.getPreferServerCipherSuites()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ALLOW_INSECURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowInsecure());
    if (getCertificateCount() > 0) {
      hash = (37 * hash) + CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getCertificateList().hashCode();
    }
    hash = (37 * hash) + SERVER_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getServerName().hashCode();
    if (getNextProtocolCount() > 0) {
      hash = (37 * hash) + NEXT_PROTOCOL_FIELD_NUMBER;
      hash = (53 * hash) + getNextProtocolList().hashCode();
    }
    hash = (37 * hash) + ENABLE_SESSION_RESUMPTION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableSessionResumption());
    hash = (37 * hash) + DISABLE_SYSTEM_ROOT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDisableSystemRoot());
    hash = (37 * hash) + MIN_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getMinVersion().hashCode();
    hash = (37 * hash) + MAX_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getMaxVersion().hashCode();
    hash = (37 * hash) + CIPHER_SUITES_FIELD_NUMBER;
    hash = (53 * hash) + getCipherSuites().hashCode();
    hash = (37 * hash) + PREFER_SERVER_CIPHER_SUITES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPreferServerCipherSuites());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.xray.transport.internet.tls.Config parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xray.transport.internet.tls.Config parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xray.transport.internet.tls.Config parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xray.transport.internet.tls.Config parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xray.transport.internet.tls.Config parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xray.transport.internet.tls.Config parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xray.transport.internet.tls.Config parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.xray.transport.internet.tls.Config parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.xray.transport.internet.tls.Config parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.xray.transport.internet.tls.Config parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.xray.transport.internet.tls.Config parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.xray.transport.internet.tls.Config parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.xray.transport.internet.tls.Config prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code xray.transport.internet.tls.Config}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:xray.transport.internet.tls.Config)
      com.xray.transport.internet.tls.ConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xray.transport.internet.tls.ConfigOuterClass.internal_static_xray_transport_internet_tls_Config_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xray.transport.internet.tls.ConfigOuterClass.internal_static_xray_transport_internet_tls_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.xray.transport.internet.tls.Config.class, com.xray.transport.internet.tls.Config.Builder.class);
    }

    // Construct using com.xray.transport.internet.tls.Config.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getCertificateFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      allowInsecure_ = false;

      if (certificateBuilder_ == null) {
        certificate_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        certificateBuilder_.clear();
      }
      serverName_ = "";

      nextProtocol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      enableSessionResumption_ = false;

      disableSystemRoot_ = false;

      minVersion_ = "";

      maxVersion_ = "";

      cipherSuites_ = "";

      preferServerCipherSuites_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.xray.transport.internet.tls.ConfigOuterClass.internal_static_xray_transport_internet_tls_Config_descriptor;
    }

    @java.lang.Override
    public com.xray.transport.internet.tls.Config getDefaultInstanceForType() {
      return com.xray.transport.internet.tls.Config.getDefaultInstance();
    }

    @java.lang.Override
    public com.xray.transport.internet.tls.Config build() {
      com.xray.transport.internet.tls.Config result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.xray.transport.internet.tls.Config buildPartial() {
      com.xray.transport.internet.tls.Config result = new com.xray.transport.internet.tls.Config(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.allowInsecure_ = allowInsecure_;
      if (certificateBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          certificate_ = java.util.Collections.unmodifiableList(certificate_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.certificate_ = certificate_;
      } else {
        result.certificate_ = certificateBuilder_.build();
      }
      result.serverName_ = serverName_;
      if (((bitField0_ & 0x00000008) != 0)) {
        nextProtocol_ = nextProtocol_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.nextProtocol_ = nextProtocol_;
      result.enableSessionResumption_ = enableSessionResumption_;
      result.disableSystemRoot_ = disableSystemRoot_;
      result.minVersion_ = minVersion_;
      result.maxVersion_ = maxVersion_;
      result.cipherSuites_ = cipherSuites_;
      result.preferServerCipherSuites_ = preferServerCipherSuites_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.xray.transport.internet.tls.Config) {
        return mergeFrom((com.xray.transport.internet.tls.Config)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.xray.transport.internet.tls.Config other) {
      if (other == com.xray.transport.internet.tls.Config.getDefaultInstance()) return this;
      if (other.getAllowInsecure() != false) {
        setAllowInsecure(other.getAllowInsecure());
      }
      if (certificateBuilder_ == null) {
        if (!other.certificate_.isEmpty()) {
          if (certificate_.isEmpty()) {
            certificate_ = other.certificate_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCertificateIsMutable();
            certificate_.addAll(other.certificate_);
          }
          onChanged();
        }
      } else {
        if (!other.certificate_.isEmpty()) {
          if (certificateBuilder_.isEmpty()) {
            certificateBuilder_.dispose();
            certificateBuilder_ = null;
            certificate_ = other.certificate_;
            bitField0_ = (bitField0_ & ~0x00000002);
            certificateBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCertificateFieldBuilder() : null;
          } else {
            certificateBuilder_.addAllMessages(other.certificate_);
          }
        }
      }
      if (!other.getServerName().isEmpty()) {
        serverName_ = other.serverName_;
        onChanged();
      }
      if (!other.nextProtocol_.isEmpty()) {
        if (nextProtocol_.isEmpty()) {
          nextProtocol_ = other.nextProtocol_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureNextProtocolIsMutable();
          nextProtocol_.addAll(other.nextProtocol_);
        }
        onChanged();
      }
      if (other.getEnableSessionResumption() != false) {
        setEnableSessionResumption(other.getEnableSessionResumption());
      }
      if (other.getDisableSystemRoot() != false) {
        setDisableSystemRoot(other.getDisableSystemRoot());
      }
      if (!other.getMinVersion().isEmpty()) {
        minVersion_ = other.minVersion_;
        onChanged();
      }
      if (!other.getMaxVersion().isEmpty()) {
        maxVersion_ = other.maxVersion_;
        onChanged();
      }
      if (!other.getCipherSuites().isEmpty()) {
        cipherSuites_ = other.cipherSuites_;
        onChanged();
      }
      if (other.getPreferServerCipherSuites() != false) {
        setPreferServerCipherSuites(other.getPreferServerCipherSuites());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.xray.transport.internet.tls.Config parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.xray.transport.internet.tls.Config) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private boolean allowInsecure_ ;
    /**
     * <pre>
     * Whether or not to allow self-signed certificates.
     * </pre>
     *
     * <code>bool allow_insecure = 1;</code>
     */
    public boolean getAllowInsecure() {
      return allowInsecure_;
    }
    /**
     * <pre>
     * Whether or not to allow self-signed certificates.
     * </pre>
     *
     * <code>bool allow_insecure = 1;</code>
     */
    public Builder setAllowInsecure(boolean value) {
      
      allowInsecure_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether or not to allow self-signed certificates.
     * </pre>
     *
     * <code>bool allow_insecure = 1;</code>
     */
    public Builder clearAllowInsecure() {
      
      allowInsecure_ = false;
      onChanged();
      return this;
    }

    private java.util.List<com.xray.transport.internet.tls.Certificate> certificate_ =
      java.util.Collections.emptyList();
    private void ensureCertificateIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        certificate_ = new java.util.ArrayList<com.xray.transport.internet.tls.Certificate>(certificate_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.xray.transport.internet.tls.Certificate, com.xray.transport.internet.tls.Certificate.Builder, com.xray.transport.internet.tls.CertificateOrBuilder> certificateBuilder_;

    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public java.util.List<com.xray.transport.internet.tls.Certificate> getCertificateList() {
      if (certificateBuilder_ == null) {
        return java.util.Collections.unmodifiableList(certificate_);
      } else {
        return certificateBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public int getCertificateCount() {
      if (certificateBuilder_ == null) {
        return certificate_.size();
      } else {
        return certificateBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public com.xray.transport.internet.tls.Certificate getCertificate(int index) {
      if (certificateBuilder_ == null) {
        return certificate_.get(index);
      } else {
        return certificateBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder setCertificate(
        int index, com.xray.transport.internet.tls.Certificate value) {
      if (certificateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificateIsMutable();
        certificate_.set(index, value);
        onChanged();
      } else {
        certificateBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder setCertificate(
        int index, com.xray.transport.internet.tls.Certificate.Builder builderForValue) {
      if (certificateBuilder_ == null) {
        ensureCertificateIsMutable();
        certificate_.set(index, builderForValue.build());
        onChanged();
      } else {
        certificateBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder addCertificate(com.xray.transport.internet.tls.Certificate value) {
      if (certificateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificateIsMutable();
        certificate_.add(value);
        onChanged();
      } else {
        certificateBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder addCertificate(
        int index, com.xray.transport.internet.tls.Certificate value) {
      if (certificateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificateIsMutable();
        certificate_.add(index, value);
        onChanged();
      } else {
        certificateBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder addCertificate(
        com.xray.transport.internet.tls.Certificate.Builder builderForValue) {
      if (certificateBuilder_ == null) {
        ensureCertificateIsMutable();
        certificate_.add(builderForValue.build());
        onChanged();
      } else {
        certificateBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder addCertificate(
        int index, com.xray.transport.internet.tls.Certificate.Builder builderForValue) {
      if (certificateBuilder_ == null) {
        ensureCertificateIsMutable();
        certificate_.add(index, builderForValue.build());
        onChanged();
      } else {
        certificateBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder addAllCertificate(
        java.lang.Iterable<? extends com.xray.transport.internet.tls.Certificate> values) {
      if (certificateBuilder_ == null) {
        ensureCertificateIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, certificate_);
        onChanged();
      } else {
        certificateBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder clearCertificate() {
      if (certificateBuilder_ == null) {
        certificate_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        certificateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder removeCertificate(int index) {
      if (certificateBuilder_ == null) {
        ensureCertificateIsMutable();
        certificate_.remove(index);
        onChanged();
      } else {
        certificateBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public com.xray.transport.internet.tls.Certificate.Builder getCertificateBuilder(
        int index) {
      return getCertificateFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public com.xray.transport.internet.tls.CertificateOrBuilder getCertificateOrBuilder(
        int index) {
      if (certificateBuilder_ == null) {
        return certificate_.get(index);  } else {
        return certificateBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public java.util.List<? extends com.xray.transport.internet.tls.CertificateOrBuilder> 
         getCertificateOrBuilderList() {
      if (certificateBuilder_ != null) {
        return certificateBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(certificate_);
      }
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public com.xray.transport.internet.tls.Certificate.Builder addCertificateBuilder() {
      return getCertificateFieldBuilder().addBuilder(
          com.xray.transport.internet.tls.Certificate.getDefaultInstance());
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public com.xray.transport.internet.tls.Certificate.Builder addCertificateBuilder(
        int index) {
      return getCertificateFieldBuilder().addBuilder(
          index, com.xray.transport.internet.tls.Certificate.getDefaultInstance());
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public java.util.List<com.xray.transport.internet.tls.Certificate.Builder> 
         getCertificateBuilderList() {
      return getCertificateFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.xray.transport.internet.tls.Certificate, com.xray.transport.internet.tls.Certificate.Builder, com.xray.transport.internet.tls.CertificateOrBuilder> 
        getCertificateFieldBuilder() {
      if (certificateBuilder_ == null) {
        certificateBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.xray.transport.internet.tls.Certificate, com.xray.transport.internet.tls.Certificate.Builder, com.xray.transport.internet.tls.CertificateOrBuilder>(
                certificate_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        certificate_ = null;
      }
      return certificateBuilder_;
    }

    private java.lang.Object serverName_ = "";
    /**
     * <pre>
     * Override server name.
     * </pre>
     *
     * <code>string server_name = 3;</code>
     */
    public java.lang.String getServerName() {
      java.lang.Object ref = serverName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serverName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Override server name.
     * </pre>
     *
     * <code>string server_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getServerNameBytes() {
      java.lang.Object ref = serverName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serverName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Override server name.
     * </pre>
     *
     * <code>string server_name = 3;</code>
     */
    public Builder setServerName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      serverName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Override server name.
     * </pre>
     *
     * <code>string server_name = 3;</code>
     */
    public Builder clearServerName() {
      
      serverName_ = getDefaultInstance().getServerName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Override server name.
     * </pre>
     *
     * <code>string server_name = 3;</code>
     */
    public Builder setServerNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      serverName_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList nextProtocol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureNextProtocolIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        nextProtocol_ = new com.google.protobuf.LazyStringArrayList(nextProtocol_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getNextProtocolList() {
      return nextProtocol_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     */
    public int getNextProtocolCount() {
      return nextProtocol_.size();
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     */
    public java.lang.String getNextProtocol(int index) {
      return nextProtocol_.get(index);
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNextProtocolBytes(int index) {
      return nextProtocol_.getByteString(index);
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     */
    public Builder setNextProtocol(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNextProtocolIsMutable();
      nextProtocol_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     */
    public Builder addNextProtocol(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNextProtocolIsMutable();
      nextProtocol_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     */
    public Builder addAllNextProtocol(
        java.lang.Iterable<java.lang.String> values) {
      ensureNextProtocolIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, nextProtocol_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     */
    public Builder clearNextProtocol() {
      nextProtocol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     */
    public Builder addNextProtocolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureNextProtocolIsMutable();
      nextProtocol_.add(value);
      onChanged();
      return this;
    }

    private boolean enableSessionResumption_ ;
    /**
     * <pre>
     * Whether or not to enable session (ticket) resumption.
     * </pre>
     *
     * <code>bool enable_session_resumption = 5;</code>
     */
    public boolean getEnableSessionResumption() {
      return enableSessionResumption_;
    }
    /**
     * <pre>
     * Whether or not to enable session (ticket) resumption.
     * </pre>
     *
     * <code>bool enable_session_resumption = 5;</code>
     */
    public Builder setEnableSessionResumption(boolean value) {
      
      enableSessionResumption_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether or not to enable session (ticket) resumption.
     * </pre>
     *
     * <code>bool enable_session_resumption = 5;</code>
     */
    public Builder clearEnableSessionResumption() {
      
      enableSessionResumption_ = false;
      onChanged();
      return this;
    }

    private boolean disableSystemRoot_ ;
    /**
     * <pre>
     * If true, root certificates on the system will not be loaded for
     * verification.
     * </pre>
     *
     * <code>bool disable_system_root = 6;</code>
     */
    public boolean getDisableSystemRoot() {
      return disableSystemRoot_;
    }
    /**
     * <pre>
     * If true, root certificates on the system will not be loaded for
     * verification.
     * </pre>
     *
     * <code>bool disable_system_root = 6;</code>
     */
    public Builder setDisableSystemRoot(boolean value) {
      
      disableSystemRoot_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, root certificates on the system will not be loaded for
     * verification.
     * </pre>
     *
     * <code>bool disable_system_root = 6;</code>
     */
    public Builder clearDisableSystemRoot() {
      
      disableSystemRoot_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object minVersion_ = "";
    /**
     * <pre>
     * The minimum TLS version.
     * </pre>
     *
     * <code>string min_version = 7;</code>
     */
    public java.lang.String getMinVersion() {
      java.lang.Object ref = minVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        minVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The minimum TLS version.
     * </pre>
     *
     * <code>string min_version = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMinVersionBytes() {
      java.lang.Object ref = minVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        minVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The minimum TLS version.
     * </pre>
     *
     * <code>string min_version = 7;</code>
     */
    public Builder setMinVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      minVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The minimum TLS version.
     * </pre>
     *
     * <code>string min_version = 7;</code>
     */
    public Builder clearMinVersion() {
      
      minVersion_ = getDefaultInstance().getMinVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The minimum TLS version.
     * </pre>
     *
     * <code>string min_version = 7;</code>
     */
    public Builder setMinVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      minVersion_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object maxVersion_ = "";
    /**
     * <pre>
     * The maximum TLS version.
     * </pre>
     *
     * <code>string max_version = 8;</code>
     */
    public java.lang.String getMaxVersion() {
      java.lang.Object ref = maxVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        maxVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The maximum TLS version.
     * </pre>
     *
     * <code>string max_version = 8;</code>
     */
    public com.google.protobuf.ByteString
        getMaxVersionBytes() {
      java.lang.Object ref = maxVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        maxVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The maximum TLS version.
     * </pre>
     *
     * <code>string max_version = 8;</code>
     */
    public Builder setMaxVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      maxVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum TLS version.
     * </pre>
     *
     * <code>string max_version = 8;</code>
     */
    public Builder clearMaxVersion() {
      
      maxVersion_ = getDefaultInstance().getMaxVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum TLS version.
     * </pre>
     *
     * <code>string max_version = 8;</code>
     */
    public Builder setMaxVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      maxVersion_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object cipherSuites_ = "";
    /**
     * <pre>
     * Specify cipher suites, except for TLS 1.3.
     * </pre>
     *
     * <code>string cipher_suites = 9;</code>
     */
    public java.lang.String getCipherSuites() {
      java.lang.Object ref = cipherSuites_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cipherSuites_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Specify cipher suites, except for TLS 1.3.
     * </pre>
     *
     * <code>string cipher_suites = 9;</code>
     */
    public com.google.protobuf.ByteString
        getCipherSuitesBytes() {
      java.lang.Object ref = cipherSuites_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cipherSuites_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Specify cipher suites, except for TLS 1.3.
     * </pre>
     *
     * <code>string cipher_suites = 9;</code>
     */
    public Builder setCipherSuites(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      cipherSuites_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specify cipher suites, except for TLS 1.3.
     * </pre>
     *
     * <code>string cipher_suites = 9;</code>
     */
    public Builder clearCipherSuites() {
      
      cipherSuites_ = getDefaultInstance().getCipherSuites();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specify cipher suites, except for TLS 1.3.
     * </pre>
     *
     * <code>string cipher_suites = 9;</code>
     */
    public Builder setCipherSuitesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      cipherSuites_ = value;
      onChanged();
      return this;
    }

    private boolean preferServerCipherSuites_ ;
    /**
     * <pre>
     * Whether the server selects its most preferred ciphersuite.
     * </pre>
     *
     * <code>bool prefer_server_cipher_suites = 10;</code>
     */
    public boolean getPreferServerCipherSuites() {
      return preferServerCipherSuites_;
    }
    /**
     * <pre>
     * Whether the server selects its most preferred ciphersuite.
     * </pre>
     *
     * <code>bool prefer_server_cipher_suites = 10;</code>
     */
    public Builder setPreferServerCipherSuites(boolean value) {
      
      preferServerCipherSuites_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the server selects its most preferred ciphersuite.
     * </pre>
     *
     * <code>bool prefer_server_cipher_suites = 10;</code>
     */
    public Builder clearPreferServerCipherSuites() {
      
      preferServerCipherSuites_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:xray.transport.internet.tls.Config)
  }

  // @@protoc_insertion_point(class_scope:xray.transport.internet.tls.Config)
  private static final com.xray.transport.internet.tls.Config DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.xray.transport.internet.tls.Config();
  }

  public static com.xray.transport.internet.tls.Config getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Config>
      PARSER = new com.google.protobuf.AbstractParser<Config>() {
    @java.lang.Override
    public Config parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Config(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Config> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Config> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.xray.transport.internet.tls.Config getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

